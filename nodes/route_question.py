"""
Node ROUTE_QUESTION - Routeur intelligent entre conversations casual et questions administratives
"""

import os
from typing import Dict, Literal
from openai import OpenAI

def route_question(state: Dict) -> Dict:
    """
    Route la question vers casual_convo ou agent_rag selon le type de question.

    Args:
        state (Dict): √âtat contenant les messages

    Returns:
        Dict avec cl√© "question_type" ("casual" ou "admin")
    """

    # Extraire la derni√®re question utilisateur
    messages = state.get("messages", [])
    if not messages:
        return {"question_type": "casual"}

    last_message = messages[-1]
    question = last_message.content if hasattr(last_message, 'content') else str(last_message)

    print(f"üîÄ Routing question: '{question[:50]}...'")

    # Configuration LLM
    client = OpenAI(api_key=os.getenv("OPENAI_API_KEY"))
    llm_model = os.getenv("LLM_MODEL", "gpt-3.5-turbo")

    # Prompt de classification
    routing_prompt = f"""Tu es un routeur intelligent pour Dagan, assistant togolais sp√©cialis√© dans les proc√©dures administratives.

Classifie cette question en "casual" ou "admin" :

**CASUAL** (r√©ponds "casual") - Conversations informelles :
- Salutations : "bonjour", "salut", "√ßa va ?", "comment allez-vous ?"
- Questions g√©n√©rales : m√©t√©o, actualit√©s, sport, divertissement
- Conversation personnelle : "tu es qui ?", "que fais-tu ?", "parle-moi de toi"
- Questions ferm√©es simples : "oui", "non", "peut-√™tre", r√©ponses courtes
- Questions de politesse : "merci", "au revoir", "√† bient√¥t"

**ADMIN** (r√©ponds "admin") - Questions administratives togolaises :
- Documents officiels : passeport, carte d'identit√©, acte de naissance
- √âducation : inscription scolaire, bourses, dipl√¥mes
- Emploi : recherche d'emploi, s√©curit√© sociale, retraite
- Sant√© : assurance maladie, soins m√©dicaux
- Fiscalit√© : imp√¥ts, taxes, d√©clarations
- Entreprises : cr√©ation soci√©t√©, permis d'exploitation
- Logement : permis construire, propri√©t√© fonci√®re
- Transport : permis conduire, immatriculation v√©hicule
- Justice : proc√©dures judiciaires, tribunaux
- T√©l√©communications : abonnement internet, t√©l√©phone
- Agriculture : subventions, certifications
- S√©curit√© : police, gendarmerie, protection civile

Question : "{question}"

R√©ponds UNIQUEMENT par "casual" ou "admin"."""

    try:
        response = client.chat.completions.create(
            model=llm_model,
            temperature=0,
            messages=[{"role": "user", "content": routing_prompt}]
        )

        result = response.choices[0].message.content.strip().lower()

        if "casual" in result:
            print("üéØ Routed to: CASUAL_CONVO")
            return {"question_type": "casual"}
        else:
            print("üéØ Routed to: AGENT_RAG")
            return {"question_type": "admin"}

    except Exception as e:
        print(f"‚ö†Ô∏è Erreur routing, d√©faut vers admin: {e}")
        return {"question_type": "admin"}